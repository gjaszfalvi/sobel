/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imageeditor;

import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.*;

/**
 *
 * @author Gabor
 */
public class ImageLab extends javax.swing.JFrame {

    /**
     * Creates new form ImageLab
     */
    public ImageLab() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSP_img = new javax.swing.JScrollPane();
        jSP_imgmod = new javax.swing.JScrollPane();
        jB_open = new javax.swing.JButton();
        jB_clear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jB_grey = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jSP_img.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jSP_img.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jSP_imgmod.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jSP_imgmod.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jB_open.setText("OPEN FILE");
        jB_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_openActionPerformed(evt);
            }
        });

        jB_clear.setText("CLEAR FRAME");
        jB_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_clearActionPerformed(evt);
            }
        });

        jLabel1.setText("Image Lab v1.0");

        jB_grey.setText("GREYSCALE");
        jB_grey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_greyActionPerformed(evt);
            }
        });

        jButton1.setText("SOBEL");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jSP_img, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jSP_imgmod, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jB_open, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jB_clear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(101, 101, 101)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jB_grey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(359, 359, 359)
                        .addComponent(jLabel1)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jB_open)
                    .addComponent(jB_grey))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jB_clear)
                    .addComponent(jButton1))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSP_imgmod, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                    .addComponent(jSP_img))
                .addContainerGap(98, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // declare file variable
    java.io.File file;
    
    // create new label
    JLabel jlab = new JLabel();
    JLabel jlabg = new JLabel();
    
    private void jB_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_openActionPerformed
        // TODO add your handling code here:
        // create file chooser
        JFileChooser jfc = new JFileChooser();
        BufferedImage image = null;
        
        // open file and dislplay in frame
        if (jfc.showOpenDialog(jLabel1) == JFileChooser.APPROVE_OPTION) {
            // get file (with file path)
            file = jfc.getSelectedFile();
            
            // read the image
            try {
                image = ImageIO.read(file);
            } catch (IOException e) {
                System.err.println(e);
            }
            
            // get image width and height
            int width = image.getWidth();
            int height = image.getHeight();
            
            // resize if image is too large
            if (width > 420 && height > 315) {
                double scalew = 0;
                double scaleh = 0;
                
                if (width > 420) {
                    scalew = (double) width / 420;
                }
                
                if (height > 315) {
                    scaleh = (double) height / 315;
                }
                double scale = (scalew > scaleh ? scalew : scaleh);
                                
                width = (int) (width / scale);
                height = (int) (height / scale);
                
                // resize with scaleImage()
                image = (BufferedImage) scaleImage(image,width,height);

                // store resized image to image variable
                try {
                    file = new File("image.jpg");
                    ImageIO.write(image, "jpg", file);
                } catch (IOException ex) {
                    System.out.println(ex);
                }
            }
            
            ImageIcon icon = new ImageIcon(image);
            
            // set icon
            jlab.setIcon(icon);
            
            // alignment
            jlab.setHorizontalAlignment(JLabel.CENTER);
            
            // add jLabel to inner frame
            jSP_img.getViewport().add(jlab);
        }
    }//GEN-LAST:event_jB_openActionPerformed

    private void jB_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_clearActionPerformed
        // TODO add your handling code here:
        jlab.setIcon(null);
        jlabg.setIcon(null);
        file = null;
    }//GEN-LAST:event_jB_clearActionPerformed

    private void jB_greyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_greyActionPerformed
        // TODO add your handling code here:
        Greyscale grey = new Greyscale();
        grey.setFile(file);
        
        try {
            grey.run();
        } catch (IOException ex) {
            System.out.println(ex);
        }
        file = grey.getFile();
        
        
        // set icon
        jlabg.setIcon(new ImageIcon(file.toString()));

        // alignment
        jlabg.setHorizontalAlignment(JLabel.CENTER);

        // add jLabel to inner frame
        jSP_imgmod.getViewport().add(jlabg);
    }//GEN-LAST:event_jB_greyActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        // start sobel
        Sobel sobel = new Sobel();
        sobel.setFile(file);
        
        try {
            sobel.run();
        } catch (IOException ex) {
            System.out.println(ex);
        }
        file = sobel.getFile();
        
        // set icon
        jlabg.setIcon(new ImageIcon(file.toString()));

        // alignment
        jlabg.setHorizontalAlignment(JLabel.CENTER);

        // add jLabel to inner frame
        jSP_imgmod.getViewport().add(jlabg);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImageLab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImageLab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImageLab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImageLab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImageLab().setVisible(true);
            }
        });
    }
    
    private Image scaleImage(Image img, int w, int h) {
        BufferedImage resizedImage = new BufferedImage(w,h,BufferedImage.TYPE_INT_RGB);
        Graphics2D g2 = resizedImage.createGraphics();
        g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        g2.drawImage(img, 0, 0, w, h, null);
        g2.dispose();
        return resizedImage;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_clear;
    private javax.swing.JButton jB_grey;
    private javax.swing.JButton jB_open;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jSP_img;
    private javax.swing.JScrollPane jSP_imgmod;
    // End of variables declaration//GEN-END:variables
}
